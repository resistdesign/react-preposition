{"mappings":"qmCAAAA,EAAAC,QAAA,SAAAC,GAMA,MAAA,CACAC,QAAA,CAAA,MACAC,SAAA,CACAC,QAAA,uRAIAC,SACA,aACAC,QACA,qBAEAC,SAAA,CACA,CAAAC,UAAA,SACAC,MAAA,IAAAC,IAAA,IACAH,SAAA,CACAN,EAAAU,iBACA,CAAAH,UAAA,QACAC,MAAA,SAAAC,IAAA,OAEA,CAAAF,UAAA,QACAC,MAAA,MAAAC,IAAA,UAIAT,EAAAW,kBACAX,EAAAY,oBACAZ,EAAAa,qBACAb,EAAAc,cACA,CAAAP,UAAA,OACAC,MAAA,KAAAC,IAAA,KAEA,CAAAF,UAAA,OACAC,MAAA,IAAAC,IAAA,IACAP,SAAA,CAAAa,eAAA,6BAEA,CAAAR,UAAA,OACAC,MAAA,UAAAC,IAAA,uBACAO,cAAA,EAAAC,YAAA,EACAC,UAAA,GAEA,CAAAX,UAAA,OACAC,MAAA,UAAAC,IAAA,MACAO,cAAA,EAAAC,YAAA,GAEA,CAAAV,UAAA,OACAC,MAAA,QAAAC,IAAA,MACAO,cAAA,EAAAC,YAAA,GAEA,CAAAV,UAAA,QACAY,cAAA,OAAAV,IAAA,MACAH,SAAA,CACAN,EAAAoB,aAGA,CAAAb,UAAA,QACAY,cAAA,WAAAV,IAAA,SACAH,SAAA,CACA,CAAAC,UAAA,OACAC,MAAA,MAAAC,IAAA,MACAO,cAAA,EAAAC,YAAA,GAEA,CAAAV,UAAA,OACAC,MAAA,SAAAC,IAAA,MACAO,cAAA,EAAAC,YAAA,GAEA,CAAAV,UAAA,OACAC,MAAA,OAAAC,IAAA,MACAO,cAAA,EAAAC,YAAA,GAEAjB,EAAAoB,YAEAlB,SAAA,CACAC,QAAA,qBAGA,CAAAI,UAAA,QACAC,MAAA,yBAAAC,IAAA,SAAAQ,YAAA,EACAf,SAAA,kBACAI,SAAA,CACA,CAAAC,UAAA,UACAC,MAAA,4BACAN,SAAA,qBACAI,SAAA,CACA,CACAC,UAAA,OACAC,MAAAR,EAAAqB,SACAH,UAAA,KAIAlB,EAAAoB,aAGA,CAAAb,UAAA,WACAY,cAAA,WAAAV,IAAA,MAAAQ,YAAA,EACAK,QAAA,MACAhB,SAAA,CACAN,EAAAoB,cAIAE,QAAA","sources":["./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/haxe.js"],"sourcesContent":["module.exports = function(hljs) {\n  var IDENT_RE = '[a-zA-Z_$][a-zA-Z0-9_$]*';\n  var IDENT_FUNC_RETURN_TYPE_RE = '([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)';\n\n  var HAXE_BASIC_TYPES = 'Int Float String Bool Dynamic Void Array ';\n\n  return {\n    aliases: ['hx'],\n    keywords: {\n      keyword: 'break case cast catch continue default do dynamic else enum extern ' +\n               'for function here if import in inline never new override package private get set ' +\n               'public return static super switch this throw trace try typedef untyped using var while ' +\n               HAXE_BASIC_TYPES,\n      built_in:\n        'trace this',\n      literal:\n        'true false null _'\n    },\n    contains: [\n      { className: 'string', // interpolate-able strings\n        begin: '\\'', end: '\\'',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          { className: 'subst', // interpolation\n            begin: '\\\\$\\\\{', end: '\\\\}'\n          },\n          { className: 'subst', // interpolation\n            begin: '\\\\$', end: '\\\\W}'\n          }\n        ]\n      },\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      { className: 'meta', // compiler meta\n        begin: '@:', end: '$'\n      },\n      { className: 'meta', // compiler conditionals\n        begin: '#', end: '$',\n        keywords: {'meta-keyword': 'if else elseif end error'}\n      },\n      { className: 'type', // function types\n        begin: ':[ \\t]*', end: '[^A-Za-z0-9_ \\t\\\\->]',\n        excludeBegin: true, excludeEnd: true,\n        relevance: 0\n      },\n      { className: 'type', // types\n        begin: ':[ \\t]*', end: '\\\\W',\n        excludeBegin: true, excludeEnd: true\n      },\n      { className: 'type', // instantiation\n        begin: 'new *', end: '\\\\W',\n        excludeBegin: true, excludeEnd: true\n      },\n      { className: 'class', // enums\n        beginKeywords: 'enum', end: '\\\\{',\n        contains: [\n          hljs.TITLE_MODE\n        ]\n      },\n      { className: 'class', // abstracts\n        beginKeywords: 'abstract', end: '[\\\\{$]',\n        contains: [\n          { className: 'type',\n            begin: '\\\\(', end: '\\\\)',\n            excludeBegin: true, excludeEnd: true\n          },\n          { className: 'type',\n            begin: 'from +', end: '\\\\W',\n            excludeBegin: true, excludeEnd: true\n          },\n          { className: 'type',\n            begin: 'to +', end: '\\\\W',\n            excludeBegin: true, excludeEnd: true\n          },\n          hljs.TITLE_MODE\n        ],\n        keywords: {\n          keyword: 'abstract from to'\n        }\n      },\n      { className: 'class', // classes\n        begin: '\\\\b(class|interface) +', end: '[\\\\{$]',  excludeEnd: true,\n        keywords: 'class interface',\n        contains: [\n          { className: 'keyword',\n            begin: '\\\\b(extends|implements) +',\n            keywords: 'extends implements',\n            contains: [\n              {\n                className: 'type',\n                begin: hljs.IDENT_RE,\n                relevance: 0\n              }\n            ]\n          },\n          hljs.TITLE_MODE\n        ]\n      },\n      { className: 'function',\n        beginKeywords: 'function', end: '\\\\(', excludeEnd: true,\n        illegal: '\\\\S',\n        contains: [\n          hljs.TITLE_MODE\n        ]\n      }\n    ],\n    illegal: /<\\//\n  };\n};"],"names":["module","exports","hljs","aliases","keywords","keyword","built_in","literal","contains","className","begin","end","BACKSLASH_ESCAPE","QUOTE_STRING_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","C_NUMBER_MODE","meta-keyword","excludeBegin","excludeEnd","relevance","beginKeywords","TITLE_MODE","IDENT_RE","illegal"],"version":3,"file":"haxe.4f0c9a3b.js.map"}
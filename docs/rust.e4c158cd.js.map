{"mappings":"qmCAAAA,EAAAC,QAAA,SAAAC,GACA,IAAAC,EAAA,wCAMAC,EAEA,upBAkBA,MAAA,CACAC,QAAA,CAAA,MACAC,SAAA,CACAC,QA3BA,2RA6BAC,QACA,8BACAC,SACAL,GAEAM,QAAAR,EAAAS,SAAA,KACAC,QAAA,KACAC,SAAA,CACAX,EAAAY,oBACAZ,EAAAa,QAAA,OAAA,OAAA,CAAAF,SAAA,CAAA,UACAX,EAAAc,QAAAd,EAAAe,kBAAA,CAAAC,MAAA,MAAAN,QAAA,OACA,CACAO,UAAA,SACAC,SAAA,CACA,CAAAF,MAAA,0BACA,CAAAA,MAAA,qCAGA,CACAC,UAAA,SACAD,MAAA,2BAEA,CACAC,UAAA,SACAC,SAAA,CACA,CAAAF,MAAA,gBAAAf,GACA,CAAAe,MAAA,iBAAAf,GACA,CAAAe,MAAA,uBAAAf,GACA,CAAAe,MAAA,kDACAf,IAGAkB,UAAA,GAEA,CACAF,UAAA,WACAG,cAAA,KAAAC,IAAA,UAAAC,YAAA,EACAX,SAAA,CAAAX,EAAAuB,wBAEA,CACAN,UAAA,OACAD,MAAA,WAAAK,IAAA,MACAV,SAAA,CACA,CACAM,UAAA,cACAD,MAAA,IAAAK,IAAA,OAIA,CACAJ,UAAA,QACAG,cAAA,OAAAC,IAAA,IACAV,SAAA,CACAX,EAAAc,QAAAd,EAAAuB,sBAAA,CAAAC,YAAA,KAEAd,QAAA,OAEA,CACAO,UAAA,QACAG,cAAA,0BAAAC,IAAA,IACAV,SAAA,CACAX,EAAAc,QAAAd,EAAAuB,sBAAA,CAAAC,YAAA,KAEAd,QAAA,YAEA,CACAM,MAAAhB,EAAAS,SAAA,KACAL,SAAA,CAAAG,SAAAL,IAEA,CACAc,MAAA","sources":["./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/rust.js"],"sourcesContent":["module.exports = function(hljs) {\n  var NUM_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))\\?';\n  var KEYWORDS =\n    'abstract as async await become box break const continue crate do dyn ' +\n    'else enum extern false final fn for if impl in let loop macro match mod ' +\n    'move mut override priv pub ref return self Self static struct super ' +\n    'trait true try type typeof unsafe unsized use virtual where while yield';\n  var BUILTINS =\n    // functions\n    'drop ' +\n    // types\n    'i8 i16 i32 i64 i128 isize ' +\n    'u8 u16 u32 u64 u128 usize ' +\n    'f32 f64 ' +\n    'str char bool ' +\n    'Box Option Result String Vec ' +\n    // traits\n    'Copy Send Sized Sync Drop Fn FnMut FnOnce ToOwned Clone Debug ' +\n    'PartialEq PartialOrd Eq Ord AsRef AsMut Into From Default Iterator ' +\n    'Extend IntoIterator DoubleEndedIterator ExactSizeIterator ' +\n    'SliceConcatExt ToString ' +\n    // macros\n    'assert! assert_eq! bitflags! bytes! cfg! col! concat! concat_idents! ' +\n    'debug_assert! debug_assert_eq! env! panic! file! format! format_args! ' +\n    'include_bin! include_str! line! local_data_key! module_path! ' +\n    'option_env! print! println! select! stringify! try! unimplemented! ' +\n    'unreachable! vec! write! writeln! macro_rules! assert_ne! debug_assert_ne!';\n  return {\n    aliases: ['rs'],\n    keywords: {\n      keyword:\n        KEYWORDS,\n      literal:\n        'true false Some None Ok Err',\n      built_in:\n        BUILTINS\n    },\n    lexemes: hljs.IDENT_RE + '!?',\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*', '\\\\*/', {contains: ['self']}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {begin: /b?\"/, illegal: null}),\n      {\n        className: 'string',\n        variants: [\n           { begin: /r(#*)\"(.|\\n)*?\"\\1(?!#)/ },\n           { begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/ }\n        ]\n      },\n      {\n        className: 'symbol',\n        begin: /'[a-zA-Z_][a-zA-Z0-9_]*/\n      },\n      {\n        className: 'number',\n        variants: [\n          { begin: '\\\\b0b([01_]+)' + NUM_SUFFIX },\n          { begin: '\\\\b0o([0-7_]+)' + NUM_SUFFIX },\n          { begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUM_SUFFIX },\n          { begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)' +\n                   NUM_SUFFIX\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'fn', end: '(\\\\(|<)', excludeEnd: true,\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      },\n      {\n        className: 'meta',\n        begin: '#\\\\!?\\\\[', end: '\\\\]',\n        contains: [\n          {\n            className: 'meta-string',\n            begin: /\"/, end: /\"/\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'type', end: ';',\n        contains: [\n          hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {endsParent: true})\n        ],\n        illegal: '\\\\S'\n      },\n      {\n        className: 'class',\n        beginKeywords: 'trait enum struct union', end: '{',\n        contains: [\n          hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {endsParent: true})\n        ],\n        illegal: '[\\\\w\\\\d]'\n      },\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: {built_in: BUILTINS}\n      },\n      {\n        begin: '->'\n      }\n    ]\n  };\n};"],"names":["module","exports","hljs","NUM_SUFFIX","BUILTINS","aliases","keywords","keyword","literal","built_in","lexemes","IDENT_RE","illegal","contains","C_LINE_COMMENT_MODE","COMMENT","inherit","QUOTE_STRING_MODE","begin","className","variants","relevance","beginKeywords","end","excludeEnd","UNDERSCORE_TITLE_MODE","endsParent"],"version":3,"file":"rust.e4c158cd.js.map"}
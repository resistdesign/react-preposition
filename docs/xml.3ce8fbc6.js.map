{"mappings":"qmCAAAA,EAAAC,QAAA,SAAAC,GACA,IACAC,EAAA,CACAC,gBAAA,EACAC,QAAA,IACAC,UAAA,EACAC,SAAA,CACA,CACAC,UAAA,OACAC,MARA,qBASAH,UAAA,GAEA,CACAG,MAAA,OACAH,UAAA,EACAC,SAAA,CACA,CACAC,UAAA,SACAE,YAAA,EACAC,SAAA,CACA,CAAAF,MAAA,IAAAG,IAAA,KACA,CAAAH,MAAA,IAAAG,IAAA,KACA,CAAAH,MAAA,sBAOA,MAAA,CACAI,QAAA,CAAA,OAAA,QAAA,MAAA,OAAA,MAAA,MAAA,MAAA,QAAA,OACAC,kBAAA,EACAP,SAAA,CACA,CACAC,UAAA,OACAC,MAAA,YAAAG,IAAA,IACAN,UAAA,GACAC,SAAA,CAAA,CAAAE,MAAA,MAAAG,IAAA,SAEAV,EAAAa,QACA,UACA,SACA,CACAT,UAAA,KAGA,CACAG,MAAA,kBAAAG,IAAA,UACAN,UAAA,IAEA,CACAE,UAAA,OACAC,MAAA,SAAAG,IAAA,MAAAN,UAAA,IAEA,CACAG,MAAA,YAAAG,IAAA,MACAI,YAAA,MACAT,SAAA,CAGA,CAAAE,MAAA,OAAAG,IAAA,OAAAK,MAAA,GACA,CAAAR,MAAA,KAAAG,IAAA,IAAAK,MAAA,GACA,CAAAR,MAAA,KAAAG,IAAA,IAAAK,MAAA,GACAf,EAAAgB,QAAAhB,EAAAiB,iBAAA,CAAAd,QAAA,KAAAG,UAAA,KAAAD,SAAA,KAAAU,MAAA,IACAf,EAAAgB,QAAAhB,EAAAkB,kBAAA,CAAAf,QAAA,KAAAG,UAAA,KAAAD,SAAA,KAAAU,MAAA,MAGA,CACAT,UAAA,MAOAC,MAAA,oBAAAG,IAAA,IACAS,SAAA,CAAAC,KAAA,SACAf,SAAA,CAAAJ,GACAoB,OAAA,CACAX,IAAA,WAAAY,WAAA,EACAR,YAAA,CAAA,MAAA,SAGA,CACAR,UAAA,MAEAC,MAAA,qBAAAG,IAAA,IACAS,SAAA,CAAAC,KAAA,UACAf,SAAA,CAAAJ,GACAoB,OAAA,CACAX,IAAA,aAAAY,WAAA,EACAR,YAAA,CAAA,eAAA,aAAA,aAAA,MAAA,cAGA,CACAR,UAAA,MACAC,MAAA,MAAAG,IAAA,MACAL,SAAA,CACA,CACAC,UAAA,OAAAC,MAAA,aAAAH,UAAA,GAEAH","sources":["./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/xml.js"],"sourcesContent":["module.exports = function(hljs) {\n  var XML_IDENT_RE = '[A-Za-z0-9\\\\._:-]+';\n  var TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {begin: /\"/, end: /\"/},\n              {begin: /'/, end: /'/},\n              {begin: /[^\\s\"'=<>`]+/}\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xjb', 'xsd', 'xsl', 'plist', 'wsf'],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: '<!DOCTYPE', end: '>',\n        relevance: 10,\n        contains: [{begin: '\\\\[', end: '\\\\]'}]\n      },\n      hljs.COMMENT(\n        '<!--',\n        '-->',\n        {\n          relevance: 10\n        }\n      ),\n      {\n        begin: '<\\\\!\\\\[CDATA\\\\[', end: '\\\\]\\\\]>',\n        relevance: 10\n      },\n      {\n        className: 'meta',\n        begin: /<\\?xml/, end: /\\?>/, relevance: 10\n      },\n      {\n        begin: /<\\?(php)?/, end: /\\?>/,\n        subLanguage: 'php',\n        contains: [\n          // We don't want the php closing tag ?> to close the PHP block when\n          // inside any of the following blocks:\n          {begin: '/\\\\*', end: '\\\\*/', skip: true},\n          {begin: 'b\"', end: '\"', skip: true},\n          {begin: 'b\\'', end: '\\'', skip: true},\n          hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null, className: null, contains: null, skip: true}),\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null, className: null, contains: null, skip: true})\n        ]\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending braket. The '$' is needed for the lexeme to be recognized\n        by hljs.subMode() that tests lexemes outside the stream.\n        */\n        begin: '<style(?=\\\\s|>|$)', end: '>',\n        keywords: {name: 'style'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '</style>', returnEnd: true,\n          subLanguage: ['css', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: '<script(?=\\\\s|>|$)', end: '>',\n        keywords: {name: 'script'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '\\<\\/script\\>', returnEnd: true,\n          subLanguage: ['actionscript', 'javascript', 'handlebars', 'xml', 'vbscript']\n        }\n      },\n      {\n        className: 'tag',\n        begin: '</?', end: '/?>',\n        contains: [\n          {\n            className: 'name', begin: /[^\\/><\\s]+/, relevance: 0\n          },\n          TAG_INTERNALS\n        ]\n      }\n    ]\n  };\n};"],"names":["module","exports","hljs","TAG_INTERNALS","endsWithParent","illegal","relevance","contains","className","begin","endsParent","variants","end","aliases","case_insensitive","COMMENT","subLanguage","skip","inherit","APOS_STRING_MODE","QUOTE_STRING_MODE","keywords","name","starts","returnEnd"],"version":3,"file":"xml.3ce8fbc6.js.map"}
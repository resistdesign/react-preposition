{"mappings":"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","sources":["./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/crystal.js"],"sourcesContent":["module.exports = function(hljs) {\n  var INT_SUFFIX = '(_*[ui](8|16|32|64|128))?';\n  var FLOAT_SUFFIX = '(_*f(32|64))?';\n  var CRYSTAL_IDENT_RE = '[a-zA-Z_]\\\\w*[!?=]?';\n  var CRYSTAL_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~|]|//|//=|&[-+*]=?|&\\\\*\\\\*|\\\\[\\\\][=?]?';\n  var CRYSTAL_PATH_RE = '[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|\\\\!)?';\n  var CRYSTAL_KEYWORDS = {\n    keyword:\n      'abstract alias annotation as as? asm begin break case class def do else elsif end ensure enum extend for fun if ' +\n      'include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? ' +\n      'return require select self sizeof struct super then type typeof union uninitialized unless until verbatim when while with yield ' +\n      '__DIR__ __END_LINE__ __FILE__ __LINE__',\n    literal: 'false nil true'\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: '#{', end: '}',\n    keywords: CRYSTAL_KEYWORDS\n  };\n  var EXPANSION = {\n    className: 'template-variable',\n    variants: [\n      {begin: '\\\\{\\\\{', end: '\\\\}\\\\}'},\n      {begin: '\\\\{%', end: '%\\\\}'}\n    ],\n    keywords: CRYSTAL_KEYWORDS\n  };\n\n  function recursiveParen(begin, end) {\n    var\n    contains = [{begin: begin, end: end}];\n    contains[0].contains = contains;\n    return contains;\n  }\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [\n      {begin: /'/, end: /'/},\n      {begin: /\"/, end: /\"/},\n      {begin: /`/, end: /`/},\n      {begin: '%[Qwi]?\\\\(', end: '\\\\)', contains: recursiveParen('\\\\(', '\\\\)')},\n      {begin: '%[Qwi]?\\\\[', end: '\\\\]', contains: recursiveParen('\\\\[', '\\\\]')},\n      {begin: '%[Qwi]?{', end: '}', contains: recursiveParen('{', '}')},\n      {begin: '%[Qwi]?<', end: '>', contains: recursiveParen('<', '>')},\n      {begin: '%[Qwi]?\\\\|', end: '\\\\|'},\n      {begin: /<<-\\w+$/, end: /^\\s*\\w+$/},\n    ],\n    relevance: 0,\n  };\n  var Q_STRING = {\n    className: 'string',\n    variants: [\n      {begin: '%q\\\\(', end: '\\\\)', contains: recursiveParen('\\\\(', '\\\\)')},\n      {begin: '%q\\\\[', end: '\\\\]', contains: recursiveParen('\\\\[', '\\\\]')},\n      {begin: '%q{', end: '}', contains: recursiveParen('{', '}')},\n      {begin: '%q<', end: '>', contains: recursiveParen('<', '>')},\n      {begin: '%q\\\\|', end: '\\\\|'},\n      {begin: /<<-'\\w+'$/, end: /^\\s*\\w+$/},\n    ],\n    relevance: 0,\n  };\n  var REGEXP = {\n    begin: '(?!%})(' + hljs.RE_STARTERS_RE + '|\\\\n|\\\\b(case|if|select|unless|until|when|while)\\\\b)\\\\s*',\n    keywords: 'case if select unless until when while',\n    contains: [\n      {\n        className: 'regexp',\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n        variants: [\n          {begin: '//[a-z]*', relevance: 0},\n          {begin: '/(?!\\\\/)', end: '/[a-z]*'},\n        ]\n      }\n    ],\n    relevance: 0\n  };\n  var REGEXP2 = {\n    className: 'regexp',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [\n      {begin: '%r\\\\(', end: '\\\\)', contains: recursiveParen('\\\\(', '\\\\)')},\n      {begin: '%r\\\\[', end: '\\\\]', contains: recursiveParen('\\\\[', '\\\\]')},\n      {begin: '%r{', end: '}', contains: recursiveParen('{', '}')},\n      {begin: '%r<', end: '>', contains: recursiveParen('<', '>')},\n      {begin: '%r\\\\|', end: '\\\\|'},\n    ],\n    relevance: 0\n  };\n  var ATTRIBUTE = {\n    className: 'meta',\n    begin: '@\\\\[', end: '\\\\]',\n    contains: [\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {className: 'meta-string'})\n    ]\n  };\n  var CRYSTAL_DEFAULT_CONTAINS = [\n    EXPANSION,\n    STRING,\n    Q_STRING,\n    REGEXP2,\n    REGEXP,\n    ATTRIBUTE,\n    hljs.HASH_COMMENT_MODE,\n    {\n      className: 'class',\n      beginKeywords: 'class module struct', end: '$|;',\n      illegal: /=/,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        hljs.inherit(hljs.TITLE_MODE, {begin: CRYSTAL_PATH_RE}),\n        {begin: '<'} // relevance booster for inheritance\n      ]\n    },\n    {\n      className: 'class',\n      beginKeywords: 'lib enum union', end: '$|;',\n      illegal: /=/,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        hljs.inherit(hljs.TITLE_MODE, {begin: CRYSTAL_PATH_RE}),\n      ],\n      relevance: 10\n    },\n    {\n      beginKeywords: 'annotation', end: '$|;',\n      illegal: /=/,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        hljs.inherit(hljs.TITLE_MODE, {begin: CRYSTAL_PATH_RE}),\n      ],\n      relevance: 10\n    },\n    {\n      className: 'function',\n      beginKeywords: 'def', end: /\\B\\b/,\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {\n          begin: CRYSTAL_METHOD_RE,\n          endsParent: true\n        })\n      ]\n    },\n    {\n      className: 'function',\n      beginKeywords: 'fun macro', end: /\\B\\b/,\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {\n          begin: CRYSTAL_METHOD_RE,\n          endsParent: true\n        })\n      ],\n      relevance: 5\n    },\n    {\n      className: 'symbol',\n      begin: hljs.UNDERSCORE_IDENT_RE + '(\\\\!|\\\\?)?:',\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ':',\n      contains: [STRING, {begin: CRYSTAL_METHOD_RE}],\n      relevance: 0\n    },\n    {\n      className: 'number',\n      variants: [\n        { begin: '\\\\b0b([01_]+)' + INT_SUFFIX },\n        { begin: '\\\\b0o([0-7_]+)' + INT_SUFFIX },\n        { begin: '\\\\b0x([A-Fa-f0-9_]+)' + INT_SUFFIX },\n        { begin: '\\\\b([1-9][0-9_]*[0-9]|[0-9])(\\\\.[0-9][0-9_]*)?([eE]_*[-+]?[0-9_]*)?' + FLOAT_SUFFIX + '(?!_)' },\n        { begin: '\\\\b([1-9][0-9_]*|0)' + INT_SUFFIX }\n      ],\n      relevance: 0\n    }\n  ];\n  SUBST.contains = CRYSTAL_DEFAULT_CONTAINS;\n  EXPANSION.contains = CRYSTAL_DEFAULT_CONTAINS.slice(1); // without EXPANSION\n\n  return {\n    aliases: ['cr'],\n    lexemes: CRYSTAL_IDENT_RE,\n    keywords: CRYSTAL_KEYWORDS,\n    contains: CRYSTAL_DEFAULT_CONTAINS\n  };\n};"],"names":["module","exports","hljs","INT_SUFFIX","CRYSTAL_METHOD_RE","CRYSTAL_PATH_RE","CRYSTAL_KEYWORDS","keyword","literal","SUBST","className","begin","end","keywords","EXPANSION","variants","recursiveParen","contains","STRING","BACKSLASH_ESCAPE","relevance","Q_STRING","REGEXP","RE_STARTERS_RE","CRYSTAL_DEFAULT_CONTAINS","inherit","QUOTE_STRING_MODE","HASH_COMMENT_MODE","beginKeywords","illegal","TITLE_MODE","endsParent","UNDERSCORE_IDENT_RE","slice","aliases","lexemes"],"version":3,"file":"crystal.644f8704.js.map"}
{"mappings":"qmCAAAA,EAAAC,QAAA,SAAAC,GACA,IAAAC,EAAA,yBAEAC,EAAA,WACAC,EAAA,qBACAC,EAAA,CACAC,UAAA,OACAC,SAAA,CACA,CAAAC,MAAAL,EAAAC,EAAA,KACA,CAAAI,MAAAL,YAAAC,EAAAD,MACA,CAAAK,MAAAL,YAAAC,EAAAD,QAWAM,EAAA,CACAH,UAAA,SACAI,UAAA,EACAH,SAAA,CACA,CAAAC,MAAA,IAAAG,IAAA,KACA,CAAAH,MAAA,IAAAG,IAAA,KACA,CAAAH,MAAA,QAEAI,SAAA,CACAX,EAAAY,iBAhBA,CACAP,UAAA,oBACAC,SAAA,CACA,CAAAC,MAAA,KAAAG,IAAA,MACA,CAAAH,MAAA,KAAAG,IAAA,SAiBA,MAAA,CACAG,kBAAA,EACAC,QAAA,CAAA,MAAA,OAAA,QACAH,SAAA,CACAP,EACA,CACAC,UAAA,OACAE,MAAA,UACAE,UAAA,IAEA,CACAJ,UAAA,SACAE,MAAA,YACAQ,WAAA,EACAJ,SAAAH,EAAAG,SAEAD,IAAAN,EAAAE,SAAA,GAAAC,OAEA,CACAA,MAAA,WAAAG,IAAA,UACAM,YAAA,OACAC,cAAA,EACAC,YAAA,EACAT,UAAA,GAEA,CACAJ,UAAA,OACAE,MAAA,IAAAP,EAAAmB,qBAEA,CACAd,UAAA,OACAE,MAAA,KAAAP,EAAAmB,qBAEA,CACAd,UAAA,OACAE,MAAA,IAAAP,EAAAmB,oBAAA,KAEA,CACAd,UAAA,OACAE,MAAA,MAAAP,EAAAmB,oBAAA,KAEA,CACAd,UAAA,SACAE,MAAA,OACAE,UAAA,GAEAT,EAAAoB,kBACA,CACAC,cAAApB,EACAqB,SAAA,CAAAC,QAAAtB,IAEAD,EAAAwB,cACAhB","sources":["./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/yaml.js"],"sourcesContent":["module.exports = function(hljs) {\n  var LITERALS = 'true false yes no null';\n\n  var keyPrefix = '^[ \\\\-]*';\n  var keyName =  '[a-zA-Z_][\\\\w\\\\-]*';\n  var KEY = {\n    className: 'attr',\n    variants: [\n      { begin: keyPrefix + keyName + \":\"},\n      { begin: keyPrefix + '\"' + keyName + '\"' + \":\"},\n      { begin: keyPrefix + \"'\" + keyName + \"'\" + \":\"}\n    ]\n  };\n\n  var TEMPLATE_VARIABLES = {\n    className: 'template-variable',\n    variants: [\n      { begin: '\\{\\{', end: '\\}\\}' }, // jinja templates Ansible\n      { begin: '%\\{', end: '\\}' } // Ruby i18n\n    ]\n  };\n  var STRING = {\n    className: 'string',\n    relevance: 0,\n    variants: [\n      {begin: /'/, end: /'/},\n      {begin: /\"/, end: /\"/},\n      {begin: /\\S+/}\n    ],\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      TEMPLATE_VARIABLES\n    ]\n  };\n\n  return {\n    case_insensitive: true,\n    aliases: ['yml', 'YAML', 'yaml'],\n    contains: [\n      KEY,\n      {\n        className: 'meta',\n        begin: '^---\\s*$',\n        relevance: 10\n      },\n      { // multi line string\n        className: 'string',\n        begin: '[\\\\|>] *$',\n        returnEnd: true,\n        contains: STRING.contains,\n        // very simple termination: next hash key\n        end: KEY.variants[0].begin\n      },\n      { // Ruby/Rails erb\n        begin: '<%[%=-]?', end: '[%-]?%>',\n        subLanguage: 'ruby',\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      },\n      { // local tags\n        className: 'type',\n        begin: '!' + hljs.UNDERSCORE_IDENT_RE,\n      },\n      { // data type\n        className: 'type',\n        begin: '!!' + hljs.UNDERSCORE_IDENT_RE,\n      },\n      { // fragment id &ref\n        className: 'meta',\n        begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$',\n      },\n      { // fragment reference *ref\n        className: 'meta',\n        begin: '\\\\*' + hljs.UNDERSCORE_IDENT_RE + '$'\n      },\n      { // array listing\n        className: 'bullet',\n        begin: '^ *-',\n        relevance: 0\n      },\n      hljs.HASH_COMMENT_MODE,\n      {\n        beginKeywords: LITERALS,\n        keywords: {literal: LITERALS}\n      },\n      hljs.C_NUMBER_MODE,\n      STRING\n    ]\n  };\n};"],"names":["module","exports","hljs","LITERALS","keyPrefix","keyName","KEY","className","variants","begin","STRING","relevance","end","contains","BACKSLASH_ESCAPE","case_insensitive","aliases","returnEnd","subLanguage","excludeBegin","excludeEnd","UNDERSCORE_IDENT_RE","HASH_COMMENT_MODE","beginKeywords","keywords","literal","C_NUMBER_MODE"],"version":3,"file":"yaml.f17f72d0.js.map"}
{"mappings":"qmCAAAA,EAAAC,QAAA,SAAAC,GACA,IAAAC,EAAA,CACAC,QACA,gbAOAC,SACA,kEACAC,QACA,mBAcAC,EAAA,CACAC,UAAA,SAAAC,MAAAP,EAAAQ,oBAAA,KAIAC,EAAA,CACAH,UAAA,QACAC,MAAA,OAAAG,IAAA,IAAAC,SAAA,CAAAX,EAAAY,iBAAAZ,EAAAa,gBAEAC,EAAA,CACAR,UAAA,WAAAC,MAAA,MAAAP,EAAAQ,qBAEAO,EAAA,CACAT,UAAA,SACAU,SAAA,CACA,CACAT,MAAA,MAAAG,IAAA,MACAC,SAAA,CAAAG,EAAAL,IAKA,CACAF,MAAA,IAAAG,IAAA,IACAO,QAAA,KACAN,SAAA,CAAAX,EAAAkB,mBAEA,CACAX,MAAA,IAAAG,IAAA,IACAO,QAAA,KACAN,SAAA,CAAAX,EAAAkB,iBAAAJ,EAAAL,MAKAU,EAAA,CACAb,UAAA,OAAAC,MAAA,gFAAAP,EAAAQ,oBAAA,MAEAY,EAAA,CACAd,UAAA,OAAAC,MAAA,IAAAP,EAAAQ,oBACAG,SAAA,CACA,CACAJ,MAAA,KAAAG,IAAA,KACAC,SAAA,CACAX,EAAAqB,QAAAN,EAAA,CAAAT,UAAA,oBAuBAgB,EAAA,CACAhB,UAAA,SACAC,MAhBA,uNAiBAgB,UAAA,GAEAC,EAAAxB,EAAAyB,QACA,OAAA,OACA,CAAAd,SAAA,CAAAX,EAAA0B,wBAEAC,EAAA,CACAX,SAAA,CACA,CAAAV,UAAA,OACAC,MAAAP,EAAAQ,qBAEA,CAAAD,MAAA,KAAAG,IAAA,KACAC,SAAA,MAIAiB,EAAAD,EAIA,OAHAC,EAAAZ,SAAA,GAAAL,SAAA,CAAAgB,GACAA,EAAAX,SAAA,GAAAL,SAAA,CAAAiB,GAEA,CACAC,QAAA,CAAA,MACAC,SAAA7B,EACAU,SAAA,CACAX,EAAAyB,QACA,UACA,OACA,CACAF,UAAA,EACAZ,SAAA,CAAA,CACAL,UAAA,SACAC,MAAA,iBAIAP,EAAA+B,oBACAP,EAtHA,CACAlB,UAAA,UACAC,MAAA,mCACAyB,OAAA,CACArB,SAAA,CACA,CACAL,UAAA,SACAC,MAAA,WAiHAF,EACAc,EACAC,EACA,CACAd,UAAA,WACA2B,cAAA,MAAAvB,IAAA,QACAwB,aAAA,EACAC,YAAA,EACAL,SAAA7B,EACAgB,QAAA,yCACAM,UAAA,EACAZ,SAAA,CACA,CACAJ,MAAAP,EAAAQ,oBAAA,UAAA0B,aAAA,EACAX,UAAA,EACAZ,SAAA,CAAAX,EAAAoC,wBAEA,CACA9B,UAAA,OACAC,MAAA,IAAAG,IAAA,IAAAoB,SAAA,UACAP,UAAA,GAEA,CACAjB,UAAA,SACAC,MAAA,KAAAG,IAAA,KACA2B,YAAA,EACAP,SAAA7B,EACAsB,UAAA,EACAZ,SAAA,CACA,CACAJ,MAAA,IAAAG,IAAA,SAAA4B,gBAAA,EACA3B,SAAA,CACAgB,EACA3B,EAAA+B,oBACAP,GAEAD,UAAA,GAEAvB,EAAA+B,oBACAP,EACAL,EACAC,EACAL,EACAf,EAAAa,gBAGAW,IAGA,CACAlB,UAAA,QACA2B,cAAA,wBAAAvB,IAAA,WACAyB,YAAA,EACAlB,QAAA,qBACAN,SAAA,CACA,CAAAsB,cAAA,iDACAjC,EAAAoC,sBACA,CACA9B,UAAA,OACAC,MAAA,IAAAG,IAAA,IAAA6B,cAAA,EAAAJ,YAAA,EACAZ,UAAA,GAEA,CACAjB,UAAA,OACAC,MAAA,UAAAG,IAAA,WAAA6B,cAAA,EAAAC,WAAA,GAEArB,EACAC,IAGAL,EACA,CACAT,UAAA,OACAC,MAAA,kBAAAG,IAAA,IACAO,QAAA,MAEAK","sources":["./node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/kotlin.js"],"sourcesContent":["module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      'abstract as val var vararg get set class object open private protected public noinline ' +\n      'crossinline dynamic final enum if else do while for when throw try catch finally ' +\n      'import package is in fun override companion reified inline lateinit init ' +\n      'interface annotation data sealed internal infix operator out by constructor super ' +\n      'tailrec where const inner suspend typealias external expect actual ' +\n      // to be deleted soon\n      'trait volatile transient native default',\n    built_in:\n      'Byte Short Char Int Long Boolean Float Double Void Unit Nothing',\n    literal:\n      'true false null'\n  };\n  var KEYWORDS_WITH_LABEL = {\n    className: 'keyword',\n    begin: /\\b(break|continue|return|this)\\b/,\n    starts: {\n      contains: [\n        {\n          className: 'symbol',\n          begin: /@\\w+/\n        }\n      ]\n    }\n  };\n  var LABEL = {\n    className: 'symbol', begin: hljs.UNDERSCORE_IDENT_RE + '@'\n  };\n\n  // for string templates\n  var SUBST = {\n    className: 'subst',\n    begin: '\\\\${', end: '}', contains: [hljs.APOS_STRING_MODE, hljs.C_NUMBER_MODE]\n  };\n  var VARIABLE = {\n    className: 'variable', begin: '\\\\$' + hljs.UNDERSCORE_IDENT_RE\n  };\n  var STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: '\"\"\"', end: '\"\"\"',\n        contains: [VARIABLE, SUBST]\n      },\n      // Can't use built-in modes easily, as we want to use STRING in the meta\n      // context as 'meta-string' and there's no syntax to remove explicitly set\n      // classNames in built-in modes.\n      {\n        begin: '\\'', end: '\\'',\n        illegal: /\\n/,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        begin: '\"', end: '\"',\n        illegal: /\\n/,\n        contains: [hljs.BACKSLASH_ESCAPE, VARIABLE, SUBST]\n      }\n    ]\n  };\n\n  var ANNOTATION_USE_SITE = {\n    className: 'meta', begin: '@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*' + hljs.UNDERSCORE_IDENT_RE + ')?'\n  };\n  var ANNOTATION = {\n    className: 'meta', begin: '@' + hljs.UNDERSCORE_IDENT_RE,\n    contains: [\n      {\n        begin: /\\(/, end: /\\)/,\n        contains: [\n          hljs.inherit(STRING, {className: 'meta-string'})\n        ]\n      }\n    ]\n  };\n\n  // https://kotlinlang.org/docs/reference/whatsnew11.html#underscores-in-numeric-literals\n  // According to the doc above, the number mode of kotlin is the same as java 8,\n  // so the code below is copied from java.js\n  var KOTLIN_NUMBER_RE = '\\\\b' +\n    '(' +\n      '0[bB]([01]+[01_]+[01]+|[01]+)' + // 0b...\n      '|' +\n      '0[xX]([a-fA-F0-9]+[a-fA-F0-9_]+[a-fA-F0-9]+|[a-fA-F0-9]+)' + // 0x...\n      '|' +\n      '(' +\n        '([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+)(\\\\.([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+))?' +\n        '|' +\n        '\\\\.([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+)' +\n      ')' +\n      '([eE][-+]?\\\\d+)?' + // octal, decimal, float\n    ')' +\n    '[lLfF]?';\n  var KOTLIN_NUMBER_MODE = {\n    className: 'number',\n    begin: KOTLIN_NUMBER_RE,\n    relevance: 0\n  };\n  var KOTLIN_NESTED_COMMENT = hljs.COMMENT(\n    '/\\\\*', '\\\\*/',\n    { contains: [ hljs.C_BLOCK_COMMENT_MODE ] }\n  );\n  var KOTLIN_PAREN_TYPE = {\n    variants: [\n\t  { className: 'type',\n\t    begin: hljs.UNDERSCORE_IDENT_RE\n\t  },\n\t  { begin: /\\(/, end: /\\)/,\n\t    contains: [] //defined later\n\t  }\n\t]\n  };\n  var KOTLIN_PAREN_TYPE2 = KOTLIN_PAREN_TYPE;\n  KOTLIN_PAREN_TYPE2.variants[1].contains = [ KOTLIN_PAREN_TYPE ];\n  KOTLIN_PAREN_TYPE.variants[1].contains = [ KOTLIN_PAREN_TYPE2 ];\n\n  return {\n    aliases: ['kt'],\n    keywords: KEYWORDS,\n    contains : [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance : 0,\n          contains : [{\n            className : 'doctag',\n            begin : '@[A-Za-z]+'\n          }]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      KOTLIN_NESTED_COMMENT,\n      KEYWORDS_WITH_LABEL,\n      LABEL,\n      ANNOTATION_USE_SITE,\n      ANNOTATION,\n      {\n        className: 'function',\n        beginKeywords: 'fun', end: '[(]|$',\n        returnBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        illegal: /fun\\s+(<.*>)?[^\\s\\(]+(\\s+[^\\s\\(]+)\\s*=/,\n        relevance: 5,\n        contains: [\n          {\n            begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(', returnBegin: true,\n            relevance: 0,\n            contains: [hljs.UNDERSCORE_TITLE_MODE]\n          },\n          {\n            className: 'type',\n            begin: /</, end: />/, keywords: 'reified',\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            endsParent: true,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              {\n                begin: /:/, end: /[=,\\/]/, endsWithParent: true,\n                contains: [\n                  KOTLIN_PAREN_TYPE,\n                  hljs.C_LINE_COMMENT_MODE,\n                  KOTLIN_NESTED_COMMENT\n                ],\n                relevance: 0\n              },\n              hljs.C_LINE_COMMENT_MODE,\n              KOTLIN_NESTED_COMMENT,\n              ANNOTATION_USE_SITE,\n              ANNOTATION,\n              STRING,\n              hljs.C_NUMBER_MODE\n            ]\n          },\n          KOTLIN_NESTED_COMMENT\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface trait', end: /[:\\{(]|$/, // remove 'trait' when removed from KEYWORDS\n        excludeEnd: true,\n        illegal: 'extends implements',\n        contains: [\n          {beginKeywords: 'public protected internal private constructor'},\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            className: 'type',\n            begin: /</, end: />/, excludeBegin: true, excludeEnd: true,\n            relevance: 0\n          },\n          {\n            className: 'type',\n            begin: /[,:]\\s*/, end: /[<\\(,]|$/, excludeBegin: true, returnEnd: true\n          },\n          ANNOTATION_USE_SITE,\n          ANNOTATION\n        ]\n      },\n      STRING,\n      {\n        className: 'meta',\n        begin: \"^#!/usr/bin/env\", end: '$',\n        illegal: '\\n'\n      },\n      KOTLIN_NUMBER_MODE\n    ]\n  };\n};"],"names":["module","exports","hljs","KEYWORDS","keyword","built_in","literal","LABEL","className","begin","UNDERSCORE_IDENT_RE","SUBST","end","contains","APOS_STRING_MODE","C_NUMBER_MODE","VARIABLE","STRING","variants","illegal","BACKSLASH_ESCAPE","ANNOTATION_USE_SITE","ANNOTATION","inherit","KOTLIN_NUMBER_MODE","relevance","KOTLIN_NESTED_COMMENT","COMMENT","C_BLOCK_COMMENT_MODE","KOTLIN_PAREN_TYPE","KOTLIN_PAREN_TYPE2","aliases","keywords","C_LINE_COMMENT_MODE","starts","beginKeywords","returnBegin","excludeEnd","UNDERSCORE_TITLE_MODE","endsParent","endsWithParent","excludeBegin","returnEnd"],"version":3,"file":"kotlin.844207aa.js.map"}